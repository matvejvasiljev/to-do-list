const root = ReactDOM.createRoot(
    document.getElementById('root')
);
// function Welcome(props) {
//     return <h1>Hello, {props.name}. Could you be so kind to give me {props.food}?</h1>;
// }
// function Party(props) {
//     return <div>
//         <Welcome name="–ö–∏—Ä–∏–ª–ª" food="a boul of soup"></Welcome>
//         <Welcome name="–ú–∞—Ç–≤–µ–π" food="a piece of pizza"></Welcome>
//         <Welcome name="–ù–∏–∫–æ–ª–∞–π" food="a burger"></Welcome>
//     </div>
// }
class App extends React.Component {
    constructor(props) {
        super(props)
        this.state = {
            items: [
                {
                    text: "–ü–æ–≥—É–ª—è—Ç—å —Å —Å–æ–±–∞–∫–∞–º–∏.",
                },
                {
                    text: "–°–¥–µ–ª–∞—Ç—å —É—Ä–æ–∫–∏.",
                },
            ],
            text: "",
        }
    }
    handleSubmit(e) {
        e.preventDefault()
        console.log(12345);
        this.setState(function (state) {
            let newItem = {
                text: this.state.text
            }
            let items = state.items
            items.push(newItem)
            return{
                items: items,
            }
        })
    }
    render() {
        return (
            <form action="" onSubmit={(e) => this.handleSubmit(e)}>
                <h1>ToDo App</h1>
                <ol>
                    {
                        this.state.items.map((item, id) => (
                            <li key={id}>
                                <p>{item.text}</p>
                                <div className="buttonContainer">
                                    <button type="button">üñäÔ∏è</button>
                                    <button type="button">üóëÔ∏è</button>
                                </div>
                            </li>
                        ))
                    }
                </ol>
                <input type="text" value={this.state.text} onChange={(e) => this.setState({ text: e.target.value })} />
                <button>üìå</button>
                <button type="button">üí£</button>
            </form>
        );
    }
}

root.render(<App></App>);

// —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –¥–æ–±–∞–≤–ª—è–ª—Å—è –∏–∑ input
// –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–¥–µ–ª–∞—Ç—å –∫–Ω–æ–ø–∫—É –±–æ–º–±—ã (—É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ–≥–æ)